---
import { Icon as Iconify } from 'astro-icon'
import { Icon } from '@astrojs/starlight/components';

interface Props {
	shops: {
        name: string
        link: string
        region?: string
        official?: boolean
    }[]
}

const getFlagEmoji = (countryCode?: string) => {
    if(countryCode === undefined) return ""

    const codePoints = countryCode
        .toUpperCase()
        .split('')
        .map(char =>  127397 + char.charCodeAt(0));
    return String.fromCodePoint(...codePoints);
}

const shops = Astro.props.shops.map(shop => ({
    ...shop, 
    flagEmoji: getFlagEmoji(shop.region)
}))
---

<label
    for="show-shops"
    class="grid grid-cols-[auto_auto_1fr_auto] items-center border border-gray-500 rounded-2xl py-1 pl-2 pr-3 text-gray-500 dark:text-gray-300 hover:text-black hover:dark:text-white no-underline text-sm cursor-pointer transition-colors"
>
    <input type="checkbox" id="show-shops" class="peer hidden">
    <Iconify name="fluent:cart-16-filled" class="w-[1em]"/>
    <div class="self-stretch w-px bg-gray-500 my-0.5 mx-1.5"></div>
    <span class="font-bold">Shops</span>
    <Icon name='down-caret' class='ml-1.5 peer-checked:rotate-180 transition-transform'/>
    <div class="col-start-3 grid max-w-0 max-h-0 peer-checked:max-w-[100vw] peer-checked:max-h-screen transition-all overflow-hidden">
        {
            shops.map(shop => (
                <a 
                    href={shop.link} target="_blank"
                    class="text-black dark:text-white no-underline hover:font-bold flex gap-1 items-center w-max"
                >
                    { shop.flagEmoji }
                    { shop.name }
                    {
                        shop.official &&
                        <div class="text-xs bg-blue-400 dark:text-black text-white rounded-full px-2 font-bold">
                            official
                        </div>
                    }
                </a>
            ))
        }
    </div>
</label>